{"version":3,"sources":["../../../node_modules/browser-pack/_prelude.js","post.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","loadImages","data","console","log","window","onload","location","pathname","match","fetch","credentials","then","res","json","catch","err","error"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,QAAAU,OAAAJ,SCAA,YA0DA,SAASK,YAAYC,MACnBC,QAAQC,IAAIF,MAzDdG,OAAOC,OAAS,WAETC,SAASC,SAASC,MAAM,qBAC3BC,MAAM,eAAiBC,YAAa,gBACjCC,KAAK,SAAAC,KAAA,MAAOA,KAAIC,SAChBF,KAAK,SAAAE,MAAA,MAAQb,YAAWa,QACxBC,MAAM,SAAAC,KAAA,MAAOb,SAAQc,MAAMD","file":"post.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nwindow.onload = function () {\n\n  if (!location.pathname.match(/^\\/addbrick\\/?$/i)) {\n    fetch('/api/bricks', { credentials: 'same-origin' })\n      .then(res => res.json())\n      .then(json => loadImages(json))\n      .catch(err => console.error(err));\n  }\n  \n\n\n/*\n  if (location.pathname.match(/^\\/$/)) {\n    // make an ajax call to load all images?\n    fetch('/api/allbricks', { method: 'GET', credentials: 'same-origin' })\n      .then(res => res.json())\n      .then(json => {\n        console.log(json);\n        loadImages(json);\n      })\n      .catch(err => console.log(err));\n  }\n\n  if (location.pathname.match(/^\\/mybricks\\/?$/i)) {\n    fetch('/api/mybricks', { credentials: 'same-origin' })\n      .then(res => res.json())\n      .then(json => {\n        loadImages(json);\n      });\n  }\n\n\n  if (location.pathname.match(/^\\/heartedbricks\\/?$/i)) {\n    fetch('/api/heartedbricks', { credentials: 'same-origin' })\n      .then(res => res.json())\n      .then(json => {\n        loadImages(json);\n      });\n  }\n\n\n  if (location.pathname.match(/^\\/user\\/.*$/i)) {\n    // extract pathname user screen name:\n    const screenName = location.pathname.match(/^\\/user\\/(.*)$/)[1];\n\n    fetch('/api/userbricks/' + screenName, { credentials: 'same-origin' })\n      .then(res => res.json())\n      .then(json => {\n        loadImages(json);\n      });\n  }\n*/\n};\n\n\n// load images from json\nfunction loadImages (data) {\n  console.log(data); \n}\n\n\n//function create\n\n"]}