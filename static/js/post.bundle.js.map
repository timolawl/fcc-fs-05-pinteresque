{"version":3,"sources":["../../../node_modules/browser-pack/_prelude.js","post.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","loadImages","data","createBrick","datum","newBrick","document","querySelector","cloneNode","counter","heartFill","image","user","firstChild","setAttribute","_id","src","link","title","alt","textContent","linkerProfileImage","linkerScreenName","hearts","addEventListener","fetch","method","credentials","headers","Content-Type","body","JSON","stringify","id","then","res","json","classList","toggle","catch","err","console","error","Access-Control-Allow-Methods","message","parentNode","removeChild","insertBefore","remove","window","onload","location","pathname","match"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,QAAAU,OAAAJ,SCAA,YAYA,SAASK,YAAYC,MACnB,IAAK,GAAIX,GAAI,EAAGA,EAAIW,KAAKJ,OAAQP,IAC/BY,YAAYD,KAAKX,IAIrB,QAASY,aAAaC,OACpB,GAAMC,UAAWC,SAASC,cAAc,oBAAoBC,WAAU,GAEhEC,QAAUJ,SAASE,cAAc,mBACjCG,UAAYL,SAASE,cAAc,uBACnCI,MAAQN,SAASE,cAAc,iBAC/BK,KAAOP,SAASE,cAAc,eAEpCF,UAASQ,WAAWC,aAAa,UAAWV,MAAMW,KAClDJ,MAAMK,IAAMZ,MAAMa,KAClBN,MAAMO,MAAQd,MAAMc,MACpBP,MAAMQ,IAAMf,MAAMc,MAClBb,SAASE,cAAc,iBAAiBa,YAAchB,MAAMc,MAC5DN,KAAKI,IAAMZ,MAAMiB,mBACjBT,KAAKM,MAAQ,IAAMd,MAAMkB,iBACzBV,KAAKO,IAAM,IAAMf,MAAMkB,iBACvBb,QAAQW,YAAchB,MAAMmB,OAG5BlB,SAASE,cAAc,oBAAoBiB,iBAAiB,QAAS,WACnEC,MAAM,eAAiBC,OAAQ,OAAQC,YAAa,cAAgBC,SAAWC,eAAgB,oBAAsBC,KAAMC,KAAKC,WAAYC,GAAI7B,MAAMW,QACnJmB,KAAK,SAAAC,KAAA,MAAOA,KAAIC,SAChBF,KAAK,SAAAE,MACJ3B,QAAQW,YAAcgB,KAAKb,OAC3Bb,UAAU2B,UAAUC,OAAO,gBAE5BC,MAAM,SAAAC,KAAA,MAAOC,SAAQC,MAAMF,SAI5BnC,SAASE,cAAc,kBACzBF,SAASE,cAAc,iBAAiBiB,iBAAiB,QAAS,WAChEC,MAAM,eAAiBC,OAAQ,SAAUC,YAAa,cAAeC,SAAWC,eAAgB,mBAAoBc,+BAAgC,qBAAuBb,KAAMC,KAAKC,WAAYC,GAAI7B,MAAMW,QACzMmB,KAAK,SAAAC,KAAA,MAAOA,KAAIC,SAChBF,KAAK,SAAAE,MAEiB,YAAjBA,KAAKQ,SACPvC,SAASwC,WAAWC,YAAYzC,YAGnCkC,MAAM,SAAAC,KAAA,MAAOC,SAAQC,MAAMF,SAIlClC,SAASC,cAAc,oBAAoBwC,aAAa1C,SAAUC,SAASC,cAAc,2BACzFF,SAASgC,UAAUW,OAAO,oBA7D5BC,OAAOC,OAAS,WACTC,SAASC,SAASC,MAAM,qBAC3B5B,MAAM,eAAiBE,YAAa,gBACjCO,KAAK,SAAAC,KAAA,MAAOA,KAAIC,SAChBF,KAAK,SAAAE,MAAA,MAAQnC,YAAWmC,QACxBG,MAAM,SAAAC,KAAA,MAAOC,SAAQC,MAAMF","file":"post.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nwindow.onload = function () {\n  if (!location.pathname.match(/^\\/addbrick\\/?$/i)) {\n    fetch('/api/bricks', { credentials: 'same-origin' })\n      .then(res => res.json())\n      .then(json => loadImages(json))\n      .catch(err => console.error(err));\n  }\n};\n\n// load images from json\nfunction loadImages (data) {\n  for (let i = 0; i < data.length; i++) {\n    createBrick(data[i]);\n  }\n}\n\nfunction createBrick (datum) {\n  const newBrick = document.querySelector('.masonry-element').cloneNode(true);\n\n  const counter = newBrick.querySelector('.brick__counter');\n  const heartFill = newBrick.querySelector('.brick__heart--fill');\n  const image = newBrick.querySelector('.brick__image');\n  const user = newBrick.querySelector('.brick__user');\n\n  newBrick.firstChild.setAttribute('data-id', datum._id);\n  image.src = datum.link;\n  image.title = datum.title;\n  image.alt = datum.title;\n  newBrick.querySelector('.brick__title').textContent = datum.title;\n  user.src = datum.linkerProfileImage;\n  user.title = '@' + datum.linkerScreenName;\n  user.alt = '@' + datum.linkerScreenName;\n  counter.textContent = datum.hearts;\n\n  // send: the id of the brick, the user can be inferred from the req itself.\n  newBrick.querySelector('.brick__favorite').addEventListener('click', () => {\n    fetch('/api/bricks', { method: 'POST', credentials: 'same-origin' , headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ id: datum._id }) })\n      .then(res => res.json())\n      .then(json => {\n        counter.textContent = json.hearts;\n        heartFill.classList.toggle('is-hearted');\n      })\n      .catch(err => console.error(err));\n  });\n\n\n  if (newBrick.querySelector('.brick__close')) { // or check if path is mybricks\n    newBrick.querySelector('.brick__close').addEventListener('click', () => {\n      fetch('/api/bricks', { method: 'DELETE', credentials: 'same-origin', headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Methods': 'POST, GET, DELETE' }, body: JSON.stringify({ id: datum._id }) })\n        .then(res => res.json())\n        .then(json => {\n          // remove the entire element from the displayi\n          if (json.message === 'success') {\n            newBrick.parentNode.removeChild(newBrick);\n          }\n        })\n        .catch(err => console.error(err));\n    });\n  }\n\n  document.querySelector('.wrapper--bricks').insertBefore(newBrick, document.querySelector('.masonry-element-sizer'));\n  newBrick.classList.remove('is-not-displayed');\n}\n\n"]}